POST /status-data.jsx?_http_id=TIDd60f245957fb603a HTTP/1.1
Host: 172.16.27.30
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: text/plain;charset=UTF-8
Content-Length: 28
Origin: http://172.16.27.30
Authorization: Basic c3N0ZXZlbnNvbjphYmMxMjM=
Connection: keep-alive
Referer: http://172.16.27.30/
Cookie: tomato_menu_status=overview.asp; tomato_status_overview_refresh=5

_http_id=TIDd60f245957fb603aHTTP/1.1 200 OK
Date: Sat, 05 Oct 2024 14:45:42 GMT
Server: Apache/2.4.62 (Debian)
Last-Modified: Sat, 05 Oct 2024 14:30:27 GMT
ETag: "29aa-623bba10920b9"
Accept-Ranges: bytes
Content-Length: 10666
Keep-Alive: timeout=5, max=100
Connection: Keep-Alive

//	
nvram = {
	'router_name': 'FreshTomato',
	'wan_domain': '',
	'wan_hostname': 'unknown',
	'wan_dns': '',
	'et0macaddr': 'ba:db:ee:ff:24:39',
	'lan_proto': 'dhcp',
	'lan_ipaddr': '172.16.27.30',
	'dhcp_start': '5',
	'dhcp_num': '96',
	'dhcpd_startip': '172.16.27.20',
	'dhcpd_endip': '172.16.27.24',
	'lan_netmask': '255.255.255.224',
	'wl_security_mode': 'disabled',
	'wl0_security_mode': 'disabled',
	'wl_crypto': 'aes',
	'wl0_crypto': 'aes',
	'wl_mode': 'ap',
	'wl0_mode': 'ap',
	'wl_wds_enable': '0',
	'wl0_wds_enable': '0',
	'wl_hwaddr': '',
	'wl0_hwaddr': 'ba:db:ee:ff:24:40',
	'wl_net_mode': 'mixed',
	'wl0_net_mode': 'mixed',
	'wl_radio': '1',
	'wl0_radio': '0',
	'wl_channel': '6',
	'wl0_channel': '6',
	'lan_gateway': '0.0.0.0',
	'wl_ssid': 'FreshTomato24',
	'wl0_ssid': 'FreshTomato24',
	'wl_closed': '0',
	'wl0_closed': '0',
	't_model_name': 'Linksys E2500 v2',
	't_features': '0xC5',
	'dhcp1_start': '',
	'dhcp1_num': '',
	'dhcpd1_startip': '',
	'dhcpd1_endip': '',
	'dhcp2_start': '',
	'dhcp2_num': '',
	'dhcpd2_startip': '',
	'dhcpd2_endip': '',
	'dhcp3_start': '',
	'dhcp3_num': '',
	'dhcpd3_startip': '',
	'dhcpd3_endip': '',
	'lan1_proto': '',
	'lan1_ipaddr': '',
	'lan1_netmask': '',
	'lan2_proto': '',
	'lan2_ipaddr': '',
	'lan2_netmask': '',
	'lan3_proto': '',
	'lan3_ipaddr': '',
	'lan3_netmask': '',
	'lan_ifname': 'br0',
	'lan1_ifname': '',
	'lan2_ifname': '',
	'lan3_ifname': '',
	'lan_ifnames': 'vlan1 eth1',
	'lan1_ifnames': '',
	'lan2_ifnames': '',
	'lan3_ifnames': '',
	'wan_ifnames': 'vlan2',
	'tomatoanon_enable': '0',
	'tomatoanon_answer': '1',
	'lan_desc': '1',
	'wan_ppp_get_ip': '0.0.0.0',
	'wan_pptp_dhcp': '0',
	'wan_pptp_server_ip': '',
	'wan_ipaddr_buf': '',
	'wan_gateway': '172.18.2.1',
	'wan_gateway_get': '0.0.0.0',
	'wan_get_domain': 'my-co.org',
	'wan_hwaddr': 'ba:db:ee:ff:24:38',
	'wan_ipaddr': '172.18.2.7',
	'wan_netmask': '255.255.255.0',
	'wan_proto': 'dhcp',
	'wan_run_mtu': '1500',
	'wan_sta': '',
	'wan2_ppp_get_ip': '',
	'wan2_pptp_dhcp': '0',
	'wan2_pptp_server_ip': '',
	'wan2_ipaddr_buf': '',
	'wan2_gateway': '0.0.0.0',
	'wan2_gateway_get': '0.0.0.0',
	'wan2_get_domain': '',
	'wan2_hwaddr': '',
	'wan2_ipaddr': '0.0.0.0',
	'wan2_netmask': '0.0.0.0',
	'wan2_proto': 'dhcp',
	'wan2_run_mtu': '',
	'wan2_sta': '',
	'wan3_ppp_get_ip': '',
	'wan3_pptp_dhcp': '',
	'wan3_pptp_server_ip': '',
	'wan3_ipaddr_buf': '',
	'wan3_gateway': '',
	'wan3_gateway_get': '',
	'wan3_get_domain': '',
	'wan3_hwaddr': '',
	'wan3_ipaddr': '',
	'wan3_netmask': '',
	'wan3_proto': '',
	'wan3_run_mtu': '',
	'wan3_sta': '',
	'wan4_ppp_get_ip': '',
	'wan4_pptp_dhcp': '',
	'wan4_pptp_server_ip': '',
	'wan4_ipaddr_buf': '',
	'wan4_gateway': '',
	'wan4_gateway_get': '',
	'wan4_get_domain': '',
	'wan4_hwaddr': '',
	'wan4_ipaddr': '',
	'wan4_netmask': '',
	'wan4_proto': '',
	'wan4_run_mtu': '',
	'wan4_sta': '',
	'mwan_num': '1',
	'wan_modem_type': '',
	'wan2_modem_type': '',
	'wan3_modem_type': '',
	'wan4_modem_type': '',
	'wan_hilink_ip': '0.0.0.0',
	'wan2_hilink_ip': '0.0.0.0',
	'wan3_hilink_ip': '',
	'wan4_hilink_ip': '',
	'wan_status_script': '0',
	'wan2_status_script': '0',
	'wan3_status_script': '',
	'wan4_status_script': '',
	'dnscrypt_proxy': '',
	'dnscrypt_priority': '',
	'stubby_proxy': '0',
	'stubby_priority': '2',
	'wl_unit': '0',
	'http_id': 'TIDd60f245957fb603a',
	'web_mx': 'status,bwm',
	'web_pb': ''};

//	
nvstat = { size: 32768, free: 11564 };

//	
etherstates = {	port0: '1000FD',
	port1: 'DOWN',
	port2: '1000FD',
	port3: 'DOWN',
	port4: '1000FD'
};

//	
anonupdate = {	update: 'no'
};

//	
sysinfo = {
	uptime: 105600,
	uptime_s: '9 day, 05:34:00',
	loads: [0, 0, 0],
	totalram: 130101248,
	freeram: 104308736,
	bufferram: 3493888,
	cached: 10039296,
	totalswap: 0,
	freeswap: 0,
	totalfreeram: 117841920,
	procs: 26,
	flashsize: 32,
	systemtype: 'Broadcom BCM5357 chip rev 2 pkg 10',
	cpumodel: 'MIPS 74K V4.9',
	bogomips: '239.20',
	cpuclk: '300',
	cfeversion: 'v1.0.9'};

//	
wlstats = [ { radio: 0, client: 0, channel:  6, mhz: 2437, rate: 600, ctrlsb: 'upper', nbw: 40, rssi: 0, noise: -69, intf: 1 }
];

function setColor(n) {
if (n >= 80)
return '#ff6f59';
else if (n >= 60)
return '#f9c05c';
else
return '#6fbf3d';
}
stats = { };
var a, b, i;
stats.anon_enable = nvram.tomatoanon_enable;
stats.anon_answer = nvram.tomatoanon_answer;
stats.lan_desc = nvram.lan_desc;
if (typeof(last_wan_proto) == 'undefined')
last_wan_proto = nvram.wan_proto;
else if (last_wan_proto != nvram.wan_proto)
reloadPage();
stats.flashsize = sysinfo.flashsize+'MB';
stats.cpumhz = sysinfo.cpuclk+'MHz';
stats.cputemp = sysinfo.cputemp+'..';
stats.systemtype = sysinfo.systemtype;
stats.cfeversion = sysinfo.cfeversion;
stats.cpuload = ((sysinfo.loads[0] / 65536.0).toFixed(2)+'<small> / </small> '+(sysinfo.loads[1] / 65536.0).toFixed(2)+'<small> / </small>'+(sysinfo.loads[2] / 65536.0).toFixed(2));
stats.uptime = sysinfo.uptime_s;
a = sysinfo.totalram;
b = sysinfo.totalfreeram;
stats.memory = scaleSize(a - b)+' / '+scaleSize(a)+' <small>('+((a - b) / a * 100.0).toFixed(2)+'%)</small><div class="progress-wrapper"><div class="progress-container"><div class="progress-bar" style="background-color:'+setColor(((a - b) / a * 100.0).toFixed(2))+';width:'+((a - b) / a * 100.0).toFixed(2)+'%"></div></div></div>';
if (sysinfo.totalswap > 0) {
a = sysinfo.totalswap;
b = sysinfo.freeswap;
stats.swap = scaleSize(a - b)+' / '+scaleSize(a)+' <small>('+((a - b) / a * 100.0).toFixed(2)+'%)</small><div class="progress-wrapper"><div class="progress-container"><div class="progress-bar" style="background-color:'+setColor(((a - b) / a * 100.0).toFixed(2))+';width:'+((a - b) / a * 100.0).toFixed(2)+'%"></div></div></div>';
} else
stats.swap = '';
stats.time = 'Sat, 05 Oct 2024 09:33:35 -0500';
stats.wanup = [1,0];
stats.wanuptime = ['1 day, 05:11:05','-'];
stats.wanlease = ['0 days, 05:48:55','0 days, 00:00:00'];
stats.dns = [['8.8.8.8:53','8.8.4.4:53'],[]];
var dns = [];
if (nvram.dnscrypt_proxy == '1' || nvram.stubby_proxy == '1') {
for (i = 0; i < stats.dns.length; ++i) {
dns[i] = 'Using '+(nvram.dnscrypt_proxy == '1' ? 'dnscrypt-proxy' : 'Stubby')+' resolvers';
if ((nvram.dnscrypt_proxy == '1' && nvram.dnscrypt_priority != '2') || (nvram.stubby_proxy == '1' && nvram.stubby_priority != '2'))
stats.dns[i] = dns[i]+' and: '+stats.dns[i];
else
stats.dns[i] = dns[i];
}
}
stats.wanip = [];
stats.wannetmask = [];
stats.wangateway = [];
for (var uidx = 1; uidx <= nvram.mwan_num; ++uidx) {
var u = (uidx > 1) ? uidx : '';
stats.wanip[uidx - 1] = nvram['wan'+u+'_ipaddr'];
stats.wannetmask[uidx - 1] = nvram['wan'+u+'_netmask'];
stats.wangateway[uidx - 1] = nvram['wan'+u+'_gateway_get'];
if (stats.wangateway[uidx - 1] == '0.0.0.0' || stats.wangateway[uidx - 1] == '')
stats.wangateway[uidx - 1] = nvram['wan'+u+'_gateway'];
switch (nvram['wan'+u+'_proto']) {
case 'pptp':
case 'l2tp':
case 'pppoe':
if (stats.wanup[uidx - 1]) {
stats.wanip[uidx - 1] = nvram['wan'+u+'_ppp_get_ip'];
if (nvram['wan'+u+'_pptp_dhcp'] == '1') {
if (nvram['wan'+u+'_ipaddr'] != '' && nvram['wan'+u+'_ipaddr'] != '0.0.0.0' && nvram['wan'+u+'_ipaddr'] != stats.wanip[uidx - 1])
stats.wanip[uidx - 1] += '&nbsp;&nbsp;<small>(DHCP: '+nvram['wan'+u+'_ipaddr']+')</small>';
if (nvram['wan'+u+'_gateway'] != '' && nvram['wan'+u+'_gateway']  != '0.0.0.0' && nvram['wan'+u+'_gateway']  != stats.wangateway[uidx - 1])
stats.wangateway[uidx - 1] += '&nbsp;&nbsp;<small>(DHCP: '+nvram['wan'+u+'_gateway']+')</small>';
}
if (stats.wannetmask[uidx - 1] == '0.0.0.0')
stats.wannetmask[uidx - 1] = '255.255.255.255';
}
else if (nvram['wan'+u+'_proto'] == 'pptp')
stats.wangateway[uidx - 1] = nvram['wan'+u+'_pptp_server_ip'];
break;
default:
if (!stats.wanup[uidx - 1]) {
stats.wanip[uidx - 1] = '0.0.0.0';
stats.wannetmask[uidx - 1] = '0.0.0.0';
stats.wangateway[uidx - 1] = '0.0.0.0';
}
}
}
stats.ip6_wan = ((typeof(sysinfo.ip6_wan) != 'undefined') ? sysinfo.ip6_wan : '')+'';
stats.ip6_wan_dns1 = ((typeof(sysinfo.ip6_wan_dns1) != 'undefined') ? sysinfo.ip6_wan_dns1 : '')+'';
stats.ip6_wan_dns2 = ((typeof(sysinfo.ip6_wan_dns2) != 'undefined') ? sysinfo.ip6_wan_dns2 : '')+'';
stats.ip6_lan = ((typeof(sysinfo.ip6_lan) != 'undefined') ? sysinfo.ip6_lan : '')+'';
stats.ip6_lan_ll = ((typeof(sysinfo.ip6_lan_ll) != 'undefined') ? sysinfo.ip6_lan_ll : '')+'';
stats.ip6_lan1 = ((typeof(sysinfo.ip6_lan1) != 'undefined') ? sysinfo.ip6_lan1 : '')+'';
stats.ip6_lan1_ll = ((typeof(sysinfo.ip6_lan1_ll) != 'undefined') ? sysinfo.ip6_lan1_ll : '')+'';
stats.ip6_lan2 = ((typeof(sysinfo.ip6_lan2) != 'undefined') ? sysinfo.ip6_lan2 : '')+'';
stats.ip6_lan2_ll = ((typeof(sysinfo.ip6_lan2_ll) != 'undefined') ? sysinfo.ip6_lan2_ll : '')+'';
stats.ip6_lan3 = ((typeof(sysinfo.ip6_lan3) != 'undefined') ? sysinfo.ip6_lan3 : '')+'';
stats.ip6_lan3_ll = ((typeof(sysinfo.ip6_lan3_ll) != 'undefined') ? sysinfo.ip6_lan3_ll : '')+'';
stats.wanstatus = ['Connected','Disconnected'];
for (var uidx = 1; uidx <= nvram.mwan_num; ++uidx)
if (stats.wanstatus[uidx - 1] != 'Connected')
stats.wanstatus[uidx - 1] = '<b>'+stats.wanstatus[uidx - 1]+'</b>';
stats.channel = [];
stats.interference = [];
stats.qual = [];
for (var uidx = 0; uidx < wl_ifaces.length; ++uidx) {
a = i = wlstats[uidx].channel * 1;
if (i < 0)
i = -i;
stats.channel.push('<a href="tools-survey.asp">'+((i) ? i+'' : 'Auto')+((wlstats[uidx].mhz) ? ' - '+(wlstats[uidx].mhz / 1000.0).toFixed(3)+' <small>GHz</small>' : '')+'</a>'+((a < 0) ? ' <small>(scanning...)</small>' : ''));
stats.interference.push((wlstats[uidx].intf >= 0) ? ((wlstats[uidx].intf) ? 'Severe' : 'Acceptable') : '');
a = wlstats[uidx].nbw * 1;
wlstats[uidx].nbw = (a > 0) ? (a+' <small>MHz</small>') : 'Auto';
if (wlstats[uidx].radio) {
a = wlstats[uidx].rate * 1;
if (a > 0)
wlstats[uidx].rate = Math.floor(a / 2) + ((a & 1) ? '.5' : '')+' <small>Mbps</small>';
else
wlstats[uidx].rate = '-';
if (wlstats[uidx].client) {
b = wlstats[uidx].rssi * 1;
if (b >= -50)
a = 100;
else if (b >= -80) 
a = Math.round(24 + ((b + 80) * 26)/10);
else if (b >= -90) 
a = Math.round(24 + ((b + 90) * 26)/10);
else
a = 0;
stats.qual.push(a+' <img src="bar'+MIN(MAX(Math.floor(a / 12), 1), 6)+'.gif" alt="">');
}
else
stats.qual.push('');
wlstats[uidx].noise += ' <small>dBm</small>';
wlstats[uidx].rssi += ' <small>dBm</small>';
}
else {
wlstats[uidx].rate = '';
wlstats[uidx].noise = '';
wlstats[uidx].rssi = '';
stats.qual.push('');
}
if (wl_ifaces[uidx][6] != 1)
wlstats[uidx].ifstatus = '<b>Down</b>';
else {
wlstats[uidx].ifstatus = 'Up';
for (i = 0; i < xifs[0].length ; ++i) {
if ((nvram[xifs[0][i]+'_ifnames']).indexOf(wl_ifaces[uidx][0]) >= 0) {
wlstats[uidx].ifstatus = wlstats[uidx].ifstatus+' ('+xifs[1][i]+')';
break;
}
}
}
}
